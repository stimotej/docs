{
  "openapi": "3.0.1",
  "info": {
    "title": "Rentiqe",
    "description": "Rentiqe API",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://rentiqe.com/api"
    }
  ],
  "paths": {
    "/listings": {
      "get": {
        "description": "Renturns paginated listings",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "description": "The locale of the listing",
            "schema": {
              "type": "string",
              "default": "en",
              "enum": ["en", "hr"]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order of the listings",
            "schema": {
              "type": "string",
              "enum": ["date-asc", "date-desc", "price-asc", "price-desc"]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "The search query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "The category ids of the listing",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "locations",
            "in": "query",
            "description": "The location ids of the listing",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date period when the listings are available",
            "schema": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "format": "date",
                  "description": "In YYYY-MM-DD format"
                },
                "to": {
                  "type": "string",
                  "format": "date",
                  "description": "In YYYY-MM-DD format"
                }
              }
            }
          },
          {
            "name": "price",
            "in": "query",
            "description": "The price range of the listing in format [min, max]",
            "schema": {
              "type": "array",
              "format": "int64",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "bounds",
            "in": "query",
            "description": "If provided the listings that are located within the bounds will be returned. It should be in format [west, south, east, north]",
            "schema": {
              "type": "array",
              "format": "int64",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of listings to return, 1 - 100",
            "schema": {
              "type": "number",
              "default": 25,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The cursor to paginate the listings",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Listings response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "listings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "description": "Id the of the next (not returned) listing. It will be presented only if there are more listings to return"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/listings/{slug}": {
      "get": {
        "description": "Returns a listing by slug",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Slug of the listing to return",
            "required": true,
            "schema": {
              "type": "string",
              "format": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": ["name"],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": ["id"],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": ["code", "name"],
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
